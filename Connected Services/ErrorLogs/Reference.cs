//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ErrorLogs
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ErrorLogs.IWsExceptionLogManager")]
    public interface IWsExceptionLogManager
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WsExceptionLogManagerIntf-IWsExceptionLogManager#AddExceptionLog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        ErrorLogs.AddExceptionLogResponse AddExceptionLog(ErrorLogs.AddExceptionLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WsExceptionLogManagerIntf-IWsExceptionLogManager#AddExceptionLog", ReplyAction="*")]
        System.Threading.Tasks.Task<ErrorLogs.AddExceptionLogResponse> AddExceptionLogAsync(ErrorLogs.AddExceptionLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WsExceptionLogManagerIntf-IWsExceptionLogManager#GetExceptionLogStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        ErrorLogs.GetExceptionLogStatusResponse GetExceptionLogStatus(ErrorLogs.GetExceptionLogStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WsExceptionLogManagerIntf-IWsExceptionLogManager#GetExceptionLogStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<ErrorLogs.GetExceptionLogStatusResponse> GetExceptionLogStatusAsync(ErrorLogs.GetExceptionLogStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WsExceptionLogManagerIntf-IWsExceptionLogManager#ResetExceptionLogStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        ErrorLogs.ResetExceptionLogStatusResponse ResetExceptionLogStatus(ErrorLogs.ResetExceptionLogStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WsExceptionLogManagerIntf-IWsExceptionLogManager#ResetExceptionLogStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<ErrorLogs.ResetExceptionLogStatusResponse> ResetExceptionLogStatusAsync(ErrorLogs.ResetExceptionLogStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WsExceptionLogManagerIntf-IWsExceptionLogManager#AreWorkstationsInErrorStatus" +
            "", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        ErrorLogs.AreWorkstationsInErrorStatusResponse AreWorkstationsInErrorStatus(ErrorLogs.AreWorkstationsInErrorStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WsExceptionLogManagerIntf-IWsExceptionLogManager#AreWorkstationsInErrorStatus" +
            "", ReplyAction="*")]
        System.Threading.Tasks.Task<ErrorLogs.AreWorkstationsInErrorStatusResponse> AreWorkstationsInErrorStatusAsync(ErrorLogs.AreWorkstationsInErrorStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WsExceptionLogManagerIntf-IWsExceptionLogManager#AreDevicesInErrorStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        ErrorLogs.AreDevicesInErrorStatusResponse AreDevicesInErrorStatus(ErrorLogs.AreDevicesInErrorStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WsExceptionLogManagerIntf-IWsExceptionLogManager#AreDevicesInErrorStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<ErrorLogs.AreDevicesInErrorStatusResponse> AreDevicesInErrorStatusAsync(ErrorLogs.AreDevicesInErrorStatusRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddExceptionLog", WrapperNamespace="urn:WsExceptionLogManagerIntf-IWsExceptionLogManager", IsWrapped=true)]
    public partial class AddExceptionLogRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string AMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public int AExceptionType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public int AHandleType;
        
        public AddExceptionLogRequest()
        {
        }
        
        public AddExceptionLogRequest(string AMessage, int AExceptionType, int AHandleType)
        {
            this.AMessage = AMessage;
            this.AExceptionType = AExceptionType;
            this.AHandleType = AHandleType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddExceptionLogResponse", WrapperNamespace="urn:WsExceptionLogManagerIntf-IWsExceptionLogManager", IsWrapped=true)]
    public partial class AddExceptionLogResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int @return;
        
        public AddExceptionLogResponse()
        {
        }
        
        public AddExceptionLogResponse(int @return)
        {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExceptionLogStatus", WrapperNamespace="urn:WsExceptionLogManagerIntf-IWsExceptionLogManager", IsWrapped=true)]
    public partial class GetExceptionLogStatusRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int AExceptionLogId;
        
        public GetExceptionLogStatusRequest()
        {
        }
        
        public GetExceptionLogStatusRequest(int AExceptionLogId)
        {
            this.AExceptionLogId = AExceptionLogId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExceptionLogStatusResponse", WrapperNamespace="urn:WsExceptionLogManagerIntf-IWsExceptionLogManager", IsWrapped=true)]
    public partial class GetExceptionLogStatusResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int @return;
        
        public GetExceptionLogStatusResponse()
        {
        }
        
        public GetExceptionLogStatusResponse(int @return)
        {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResetExceptionLogStatus", WrapperNamespace="urn:WsExceptionLogManagerIntf-IWsExceptionLogManager", IsWrapped=true)]
    public partial class ResetExceptionLogStatusRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int AWorkstationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public int AUserId;
        
        public ResetExceptionLogStatusRequest()
        {
        }
        
        public ResetExceptionLogStatusRequest(int AWorkstationId, int AUserId)
        {
            this.AWorkstationId = AWorkstationId;
            this.AUserId = AUserId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResetExceptionLogStatusResponse", WrapperNamespace="urn:WsExceptionLogManagerIntf-IWsExceptionLogManager", IsWrapped=true)]
    public partial class ResetExceptionLogStatusResponse
    {
        
        public ResetExceptionLogStatusResponse()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AreWorkstationsInErrorStatus", WrapperNamespace="urn:WsExceptionLogManagerIntf-IWsExceptionLogManager", IsWrapped=true)]
    public partial class AreWorkstationsInErrorStatusRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int[] AWorkstationIds;
        
        public AreWorkstationsInErrorStatusRequest()
        {
        }
        
        public AreWorkstationsInErrorStatusRequest(int[] AWorkstationIds)
        {
            this.AWorkstationIds = AWorkstationIds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AreWorkstationsInErrorStatusResponse", WrapperNamespace="urn:WsExceptionLogManagerIntf-IWsExceptionLogManager", IsWrapped=true)]
    public partial class AreWorkstationsInErrorStatusResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public bool @return;
        
        public AreWorkstationsInErrorStatusResponse()
        {
        }
        
        public AreWorkstationsInErrorStatusResponse(bool @return)
        {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AreDevicesInErrorStatus", WrapperNamespace="urn:WsExceptionLogManagerIntf-IWsExceptionLogManager", IsWrapped=true)]
    public partial class AreDevicesInErrorStatusRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int AWorkstationId;
        
        public AreDevicesInErrorStatusRequest()
        {
        }
        
        public AreDevicesInErrorStatusRequest(int AWorkstationId)
        {
            this.AWorkstationId = AWorkstationId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AreDevicesInErrorStatusResponse", WrapperNamespace="urn:WsExceptionLogManagerIntf-IWsExceptionLogManager", IsWrapped=true)]
    public partial class AreDevicesInErrorStatusResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public bool @return;
        
        public AreDevicesInErrorStatusResponse()
        {
        }
        
        public AreDevicesInErrorStatusResponse(bool @return)
        {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IWsExceptionLogManagerChannel : ErrorLogs.IWsExceptionLogManager, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class WsExceptionLogManagerClient : System.ServiceModel.ClientBase<ErrorLogs.IWsExceptionLogManager>, ErrorLogs.IWsExceptionLogManager
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public WsExceptionLogManagerClient() : 
                base(WsExceptionLogManagerClient.GetDefaultBinding(), WsExceptionLogManagerClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.IWsExceptionLogManagerPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WsExceptionLogManagerClient(EndpointConfiguration endpointConfiguration) : 
                base(WsExceptionLogManagerClient.GetBindingForEndpoint(endpointConfiguration), WsExceptionLogManagerClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WsExceptionLogManagerClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(WsExceptionLogManagerClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WsExceptionLogManagerClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(WsExceptionLogManagerClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WsExceptionLogManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public ErrorLogs.AddExceptionLogResponse AddExceptionLog(ErrorLogs.AddExceptionLogRequest request)
        {
            return base.Channel.AddExceptionLog(request);
        }
        
        public System.Threading.Tasks.Task<ErrorLogs.AddExceptionLogResponse> AddExceptionLogAsync(ErrorLogs.AddExceptionLogRequest request)
        {
            return base.Channel.AddExceptionLogAsync(request);
        }
        
        public ErrorLogs.GetExceptionLogStatusResponse GetExceptionLogStatus(ErrorLogs.GetExceptionLogStatusRequest request)
        {
            return base.Channel.GetExceptionLogStatus(request);
        }
        
        public System.Threading.Tasks.Task<ErrorLogs.GetExceptionLogStatusResponse> GetExceptionLogStatusAsync(ErrorLogs.GetExceptionLogStatusRequest request)
        {
            return base.Channel.GetExceptionLogStatusAsync(request);
        }
        
        public ErrorLogs.ResetExceptionLogStatusResponse ResetExceptionLogStatus(ErrorLogs.ResetExceptionLogStatusRequest request)
        {
            return base.Channel.ResetExceptionLogStatus(request);
        }
        
        public System.Threading.Tasks.Task<ErrorLogs.ResetExceptionLogStatusResponse> ResetExceptionLogStatusAsync(ErrorLogs.ResetExceptionLogStatusRequest request)
        {
            return base.Channel.ResetExceptionLogStatusAsync(request);
        }
        
        public ErrorLogs.AreWorkstationsInErrorStatusResponse AreWorkstationsInErrorStatus(ErrorLogs.AreWorkstationsInErrorStatusRequest request)
        {
            return base.Channel.AreWorkstationsInErrorStatus(request);
        }
        
        public System.Threading.Tasks.Task<ErrorLogs.AreWorkstationsInErrorStatusResponse> AreWorkstationsInErrorStatusAsync(ErrorLogs.AreWorkstationsInErrorStatusRequest request)
        {
            return base.Channel.AreWorkstationsInErrorStatusAsync(request);
        }
        
        public ErrorLogs.AreDevicesInErrorStatusResponse AreDevicesInErrorStatus(ErrorLogs.AreDevicesInErrorStatusRequest request)
        {
            return base.Channel.AreDevicesInErrorStatus(request);
        }
        
        public System.Threading.Tasks.Task<ErrorLogs.AreDevicesInErrorStatusResponse> AreDevicesInErrorStatusAsync(ErrorLogs.AreDevicesInErrorStatusRequest request)
        {
            return base.Channel.AreDevicesInErrorStatusAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.IWsExceptionLogManagerPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.IWsExceptionLogManagerPort))
            {
                return new System.ServiceModel.EndpointAddress("https://bosdemo.enta.com.au/bosservices.dll/soap/IWsExceptionLogManager");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return WsExceptionLogManagerClient.GetBindingForEndpoint(EndpointConfiguration.IWsExceptionLogManagerPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return WsExceptionLogManagerClient.GetEndpointAddress(EndpointConfiguration.IWsExceptionLogManagerPort);
        }
        
        public enum EndpointConfiguration
        {
            
            IWsExceptionLogManagerPort,
        }
    }
}
